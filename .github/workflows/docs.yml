name: Docs

on:
  workflow_dispatch:
    inputs:
      publish:
        default: false
        type: boolean
      version:
        default: ''
        required: false
        type: string
      branch:
        description: 'Branch/tag with documentation source. If not set, the current branch will be used.'
        default: ''
        required: false
        type: string
  workflow_call:
    inputs:
      publish:
        default: false
        type: boolean
      version:
        default: ''
        required: false
        type: string
      branch:
        description: 'Branch/tag with documentation source. If not set, the current branch will be used.'
        default: ''
        required: false
        type: string
      linkcheck:
        description: 'Run the link checker. If not set the link checker will not be run.'
        default: false
        required: false
        type: boolean

env:
  VERSION: ${{ inputs.version }}

jobs:
  docs:
    name: Build documentation
    runs-on: 'ubuntu-24.04'
    defaults:
      run:
        shell: bash -l {0}  # required for conda env
    env:
        ESS_PROTECTED_FILESTORE_USERNAME: ${{ secrets.ESS_PROTECTED_FILESTORE_USERNAME }}
        ESS_PROTECTED_FILESTORE_PASSWORD: ${{ secrets.ESS_PROTECTED_FILESTORE_PASSWORD }}

    steps:
      - run: sudo apt install --yes graphviz pandoc
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch == '' && github.ref_name || inputs.branch }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          fetch-depth: 0  # history required so cmake can determine version
      - uses: mamba-org/setup-micromamba@v2
        with:
          environment-name: ci-docs
          condarc: |
            channels:
              - mantid
              - conda-forge
            create-args: >-
              python=3.11
              mantid=6.12.0
      - run: pip install --no-build-isolation --no-deps -e .
        if: ${{ inputs.version == '' }}
      - run: tox -e docs --current-env
      - uses: actions/upload-artifact@v4
        id: artifact-upload-step
        with:
          name: docs_html
          path: html/
      - run: echo "::notice::https://remote-unzip.deno.dev/${{ github.repository }}/artifacts/${{ steps.artifact-upload-step.outputs.artifact-id }}"

      - uses: JamesIves/github-pages-deploy-action@v4.7.3
        if: ${{ inputs.publish }}
        with:
          branch: gh-pages
          folder: html
          single-commit: true
