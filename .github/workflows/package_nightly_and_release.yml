name: Package build

on:
  release:
    types: [published]
  schedule:
    - cron: "0 0 * * 4"  # every Thursday
  workflow_dispatch:

defaults:
  run:
    shell: bash -l {0}  # required for conda env

jobs:
  conda_build:
    name: Package build (${{ matrix.os }}, py${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    env:
      DOCS_HTML_DIR: ${{ github.workspace }}/docs_html
    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.8"]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0  # history required so cmake can determine version

      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-version: latest
          miniforge-variant: Mambaforge
      - run: mamba install -c conda-forge --yes conda-build boa
      - run: conda mambabuild --channel conda-forge --channel scipp --channel ess-dmsc --channel mantid --python=${{ matrix.python-version }} --no-anaconda-upload --override-channels --output-folder conda/package conda

      - uses: actions/upload-artifact@v2
        with:
          name: conda-package-${{ matrix.os }}-py${{ matrix.python-version }}
          path: conda/package/*/scippneutron*.tar.bz2

      - uses: actions/upload-artifact@v2
        if: ${{ contains(matrix.os, 'ubuntu') && matrix.python-version == '3.8' }}
        with:
          name: html
          path: docs_html

  # deploy:
  #   needs: conda_build
  #   name: Deploy packages and docs
  #   runs-on: ubuntu-latest
  #   env:
  #     conda_label: ${{ startsWith(github.ref, 'refs/tags/') && 'main' || 'dev' }}
  #   steps:
  #     - uses: conda-incubator/setup-miniconda@v2
  #     - run: conda install -c conda-forge --yes anaconda-client
  #     - uses: actions/checkout@v2  # Need to checkout repo so github-pages-deploy-action works
  #     - uses: actions/download-artifact@v2
  #     - run: anaconda --token ${{ secrets.ANACONDATOKEN }} upload --user scipp --label ${{ env.conda_label }} $(ls conda-package-*/*/*.tar.bz2)

  #     - uses: JamesIves/github-pages-deploy-action@v4.2.5
  #       with:
  #         branch: gh-pages
  #         folder: html
  #         # Note: If this is a release, it will not deploy to the top level folder.
  #         # The next scheduled main build will update that.
  #         target-folder: ${{ env.conda_label == 'main' && format('release/{0}', github.ref_name) || '' }}
  #         single-commit: true
  #         clean-exclude: release
