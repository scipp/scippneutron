name: Release

on:
  release:
    types: [published]
  workflow_dispatch:

defaults:
  run:
    shell: bash -l {0}  # required for conda env

jobs:
  build_conda:
    name: Conda package build (${{ matrix.variant.target }}, py${{ matrix.python-version }})
    runs-on: ${{ matrix.variant.os }}
    strategy:
      matrix:
        variant:
          - {os: ubuntu-20.04, target: linux_64}
          - {os: macos-11, target: osx_64}
          - {os: macos-11, target: osx_arm64}
          - {os: windows-2019, target: win_64}
        python-version: ["3.8", "3.9"]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0  # history required so cmake can determine version

      - name: Setup Mambaforge
        uses: mamba-org/provision-with-micromamba@main
        with:
          micromamba-version: 0.24.0
          environment-file: false
          environment-name: release
          channels: conda-forge
          extra-specs: |
            python=${{ matrix.python-version }}
            conda-build
      - run: conda build --channel conda-forge --channel scipp --channel ess-dmsc --channel mantid --variant-config-files=conda/variants/${{ matrix.variant.target }}.yaml --python=${{ matrix.python-version }} --no-anaconda-upload --override-channels --output-folder conda/package conda

      - uses: actions/upload-artifact@v2
        with:
          name: conda-package-${{ matrix.variant.os }}-py${{ matrix.python-version }}
          path: conda/package/*/scippneutron*.tar.bz2

  upload_packages:
    name: Deploy packages
    needs: [docs]
    runs-on: ubuntu-20.04
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - uses: actions/download-artifact@v2
      - name: Setup Mambaforge
        uses: mamba-org/provision-with-micromamba@main
        with:
          micromamba-version: 0.24.0
          environment-file: false
          environment-name: deploy
          channels: conda-forge
          extra-specs: anaconda-client
      - run: anaconda --token ${{ secrets.ANACONDATOKEN }} upload --user scipp --label main $(ls conda-package-*/*/*.tar.bz2)

  manage-versions:
    name: Manage Versions
    runs-on: ubuntu-20.04
    outputs:
      version-new: ${{ steps.version.outputs.new }}
      version-replaced: ${{ steps.version.outputs.replaced }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Mambaforge and dev env
        uses: mamba-org/provision-with-micromamba@main
        with:
          micromamba-version: 0.24.0
          environment-file: .buildconfig/ci-linux.yml
          cache-env: true
          extra-specs: python=3.8
      - name: Set outputs
        id: version
        run: |
          echo "::set-output name=new::$(python docs/version.py --repo=scippneutron --version=${GITHUB_REF_NAME} --action=is-new)"
          echo "::set-output name=replaced::$(python docs/version.py --repo=scippneutron --version=${GITHUB_REF_NAME} --action=get-replaced)"

  replaced-docs:
    needs: [upload_packages, manage-versions]
    if: github.event_name == 'release' && github.event.action == 'published' && needs.manage-versions.outputs.version-new == 'True'
    uses: ./.github/workflows/docs.yml
    with:
      publish: true
      version: ${{ needs.manage-versions.outputs.version-replaced }}
    secrets: inherit

  docs:
    needs: upload_packages
    uses: ./.github/workflows/docs.yml
    with:
      publish: ${{ github.event_name == 'release' && github.event.action == 'published' }}
      version: ${{ github.ref_name }}
    secrets: inherit
