[tox]
envlist = py310
isolated_build = true

[testenv]
deps = -r requirements/test.txt
setenv =
  JUPYTER_PLATFORM_DIRS = 1
commands = pytest {posargs}

[testenv:nightly]
deps = -r requirements/nightly.txt
commands = pytest {posargs}

[testenv:unpinned]
description = Test with unpinned dependencies, as a user would install now.
deps =
  -r requirements/basetest.txt
  scippneutron[all]
commands = pytest {posargs}

[testenv:static]
description = Code formatting and static analysis
skip_install = true
deps = -r requirements/static.txt
allowlist_externals = sh
# The first run of pre-commit may reformat files. If this happens, it returns 1 but this
# should not fail the job. So just run again if it fails. A second failure means that
# either the different formatters can't agree on a format or that static analysis failed.
commands = sh -c 'pre-commit run -a || (echo "" && pre-commit run -a)'

[testenv:mypy]
description = Type checking (mypy)
deps = -r requirements/mypy.txt
commands = python -m mypy .

[testenv:deps]
description = Update dependencies by running pip-compile-multi
deps =
  pip-compile-multi
  tomli
skip_install = true
changedir = requirements
commands = python ./make_base.py --nightly scipp,scippnexus,plopp
           pip-compile-multi -d . --backtracking
